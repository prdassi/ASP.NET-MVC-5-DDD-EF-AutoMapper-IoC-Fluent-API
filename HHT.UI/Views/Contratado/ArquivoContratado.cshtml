@model HHT.UI.ViewModels.ArquivoContratadoViewModel

    <div class="page-head">
        <ol class="breadcrumb page-head-nav">
            <li><a href="#">Home</a></li>
            <li><a href="#">Portal</a></li>
            <li class="active">Contratados</li>
        </ol>
    </div>
    <div class="container-fluid">
        <div class="row">

            <div class="col-sm-12">
                <div class="panel panel-border-color panel-border-color-primary">
                    <div class="panel-heading panel-heading-divider">
                        Documentos do Contratado
                        <div class="tools"><a href="@Url.Action("Documentos", "Contratado", new { contratadoId = Model.Contratados.First().ContratadoId })" documentos-contratados.html"><span class="icon-container back"><span class="icon back mdi mdi-chevron-left"></span></span></a></div>
                    </div>
                    <div class="panel-body">
                        <div class="form-horizontal">
                           <div class="col-md-4">
                                <div class="form-group xs-mt-10">
                                    <label for="inputNome" class="col-md-2 without-padding-right control-label">Nome</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Contratados.First().Nome, new { htmlAttributes = new { @class = "form-control input-xs", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group xs-mt-10">
                                    <label for="inputRG" class="col-md-2 without-padding-right control-label">RG</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Contratados.First().RG, new { htmlAttributes = new { @class = "form-control input-xs", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group xs-mt-10">
                                    <label for="inputFuncao" class="col-md-2 without-padding-right control-label">Função</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Contratados.First().Funcao.Nome, new { htmlAttributes = new { @class = "form-control input-xs", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="panel panel-border">
                    <div class="panel-heading panel-heading-divider">Incluir documentos</div>
                    <div class="panel-body without-bottom">

                    @using (Html.BeginForm("ArquivoContratado", "Contratado", FormMethod.Post, new { enctype = "multipart/form-data", runat = "server", @class = "form-horizontal", id = "frmCadastrarDocumento", data_toggle = "validator", data_disable = "false" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(model => model.Contratados.First().ContratadoId)
                        <div class="col-sm-6">
                            <div class="form-horizontal">
                                <div class="form-group xs-mt-10">
                                    <label for="inputTipo" class="col-sm-2 without-padding-right control-label">Tipo</label>
                                    <div class="col-sm-10">
                                        @Html.DropDownList("TipoDocumentoId", ViewBag.TiposDocumento as SelectList, "-- Selecione --", new { @class = "form-control input-xs", required = "required" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputDescricao" class="col-sm-2 without-padding-right control-label">Descrição</label>
                                    <div class="col-sm-10">
                                        @Html.DropDownList("DocumentoGeralId", Enumerable.Empty<SelectListItem>(), "-- Selecione --", new { @class = "form-control input-xs", required = "required" })
                                    </div>
                                </div>                               
                                <div class="form-group">
                                    <label for="inputDocumento" class="col-sm-2 without-padding-right control-label">Arquivo</label>
                                    <div class="col-sm-10">
                                        <input type="file" name="upload" id="upload" data-multiple-caption="{count} arquivos selecionados" multiple="" class="inputfile">
                                        <label for="upload" class="btn-default" id="incluirDocumento"> <i class="mdi mdi-upload"></i><span>Selecione o arquivo...</span></label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">

                            <div class="form-horizontal">
                                <div class="form-group xs-mt-10" id="divLocal">
                                    <label for="inputLocal" class="col-sm-3 without-padding-right control-label">Local</label>
                                    <div class="col-sm-8">
                                        @Html.DropDownList("LocalId", ViewBag.Locais as SelectList, "-- Selecione --", new { @class = "form-control input-xs", @readonly = "readonly" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="inputRealizado" class="col-sm-3 without-padding-right control-label">Realizado em</label>
                                    <div class="col-sm-8">
                                        @Html.Editor("DataDocumento", new { htmlAttributes = new { @class = "form-control input-xs", required = "required", data_mask = "99/99/9999", placeholder = "DD/MM/AAAA" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="inputComentario" class="col-sm-3 without-padding-right control-label">Comentários</label>
                                    <div class="col-sm-8">
                                        @Html.TextAreaFor(model => model.Comentario, new { @class = "form-control input-xs" })
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row">

                            <div class="col-sm-12">
                                <div class="panel-heading-divider-button"></div>
                                <div class="col-sm-12">
                                    <p class="text-right">
                                        <button type="submit" class="btn btn-space btn-primary">Confirmar</button>
                                        <button type="button" id="btnCancelarCadastrarDocumento" class="btn btn-space btn-default">Cancelar</button>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                    </div>
            </div>
        </div>
    </div>
</div>

<!--Modal Alerts-->
<div id="mod-success" tabindex="-1" role="dialog" style="" class="modal fade" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" onclick="FecharIncluirDocumento('@Model.Contratados.First().ContratadoId')" data-dismiss="modal" aria-hidden="true" class="close"><span class="mdi mdi-close" id="close-sucess"></span></button>
            </div>
            <div class="modal-body">
            @using (Html.BeginForm("Documentos", "Contratado", FormMethod.Get))
            {
                    @Html.HiddenFor(model => model.Contratados.First().ContratadoId)
                    <div class="text-center">
                        <div class="text-success"><span class="modal-main-icon mdi mdi-check"></span></div>
                        <h3>Sucesso!</h3>
                        <p>Foi incluído com sucesso esse documento.<br>Deseja incluir outro documento?</p>
                        <div class="xs-mt-50">
                            <button type="submit" dismiss="modal" class="btn btn-space btn-default">Não</button>
                            <button type="button" id="btnSim" data-dismiss="modal" class="btn btn-space btn-success">Sim</button>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer"></div>
        </div>
    </div>
</div>

@section specificScript{
    @Scripts.Render("~/bundles/contratado")

    <script src="~/Scripts/bootstrap-slider.js" type="text/javascript"></script>

    <script type="text/javascript">
        App.formElements();

        if ('@TempData["apresentarModal"]' != "" )
        {
            $('#mod-success').modal('show');
        }
    </script>
}